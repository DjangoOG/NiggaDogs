import asyncio
import aiosqlite
import sys

print("üîÑ –ù–∞—á–∏–Ω–∞—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

async def init_database():
    try:
        print("üìÇ –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        async with aiosqlite.connect('bot.db') as db:
            print("üìù –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É Categories...")
            await db.execute('''
                CREATE TABLE IF NOT EXISTS Categories (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    name TEXT NOT NULL,
                    emoji TEXT DEFAULT 'üìÅ',
                    parent_id INTEGER,
                    level INTEGER DEFAULT 0,
                    description TEXT,
                    order_index INTEGER DEFAULT 0,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (parent_id) REFERENCES Categories(id) ON DELETE CASCADE
                )
            ''')
            
            print("üìù –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É Packages...")
            await db.execute('''
                CREATE TABLE IF NOT EXISTS Packages (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    category_id INTEGER NOT NULL,
                    name TEXT NOT NULL,
                    description TEXT,
                    order_index INTEGER DEFAULT 0,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (category_id) REFERENCES Categories(id) ON DELETE CASCADE
                )
            ''')
            
            print("üìù –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É Documents...")
            await db.execute('''
                CREATE TABLE IF NOT EXISTS Documents (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    package_id INTEGER NOT NULL,
                    filename TEXT NOT NULL,
                    file_path TEXT NOT NULL,
                    file_type TEXT,
                    file_id TEXT,
                    file_size INTEGER,
                    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    FOREIGN KEY (package_id) REFERENCES Packages(id) ON DELETE CASCADE
                )
            ''')
            
            print("üíæ –°–æ—Ö—Ä–∞–Ω—è—é –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
            await db.commit()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
            print("üìÅ –§–∞–π–ª bot.db —Å–æ–∑–¥–∞–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)

if __name__ == "__main__":
    try:
        asyncio.run(init_database())
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)